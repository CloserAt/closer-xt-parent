#数据库配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/xuetang?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.username= root
spring.datasource.password= 123456

spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=123456

#rocketmq配置
rocketmq.name-server=192.168.56.1:9876
#组：同组内，如果有多个生产者，这些就成了一个集群
#不同组不能互通
rocketmq.producer.group=xt_web_group

#dubbo相关配置
nacos.server-address=127.0.0.1
nacos.port=8848
nacos.username=nacos
nacos.password=nacos

dubbo.scan.base-packages=com.closer.xt.web
dubbo.registry.group=xt_dubbo
dubbo.registry.address=nacos://${nacos.server-address}:${nacos.port}/?username=${nacos.username}&password=${nacos.password}
#此配置代表启动的时候不去检测dubbo的服务提供方是否运行，防止报错，便于测试等等
dubbo.consumer.check=false

#shardingJDBC配置
spring.shardingsphere.datasource.common.type= com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name= com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.username= root
spring.shardingsphere.datasource.common.password= 123456

#一主二从
spring.shardingsphere.datasource.names=master,slave0,slave1

#配置第一数据源
spring.shardingsphere.datasource.master.type= com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name= com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:mysql://localhost:3306/xuetang?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.shardingsphere.datasource.master.username= root
spring.shardingsphere.datasource.master.password= 123456

#配置从数据源0
spring.shardingsphere.datasource.slave0.type= com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave0.driver-class-name= com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave0.jdbc-url=jdbc:mysql://localhost:3306/xuetang?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.shardingsphere.datasource.slave0.username= root
spring.shardingsphere.datasource.slave0.password= 123456

#配置从数据源1
spring.shardingsphere.datasource.slave1.type= com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driver-class-name= com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.jdbc-url=jdbc:mysql://localhost:3306/xuetang?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.shardingsphere.datasource.slave1.username= root
spring.shardingsphere.datasource.slave1.password= 123456

# 写数据源名称
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms.write-data-source-name=master
# 读数据源名称，多个从数据源用逗号分隔
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms.read-data-source-names=slave0,slave1
# 负载均衡算法名称:round-robin轮询算法
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms.load-balancer-name= round-robin

# 负载均衡算法配置
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round-robin.type= ROUND_ROBIN
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round-robin.props.workId = 1

#打印sql
spring.shardingsphere.props.sql-show=true


#分表规则
##配置 t_user_practice表规则
spring.shardingsphere.rules.sharding.tables.t_user_practice.actual-data-nodes=master.t_user_practice_$->{0..9}

##配置分表策略
spring.shardingsphere.rules.sharding.tables.t_user_practice.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_user_practice.table-strategy.standard.sharding-algorithm-name=table-inline


##配置分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=t_user_practice_$->{user_id % 10}


# 微信支付相关配置
wx.pay.appId=wx71a36ca196b2ace5
wx.open.config.pay.secret=a8c2760c770eec89506e1ae048ee19e5
wx.pay.mchId=1616310088
wx.pay.mchKey=mszlu654ieqp987yhfvcqw2347xsdli1
wx.notify.url=http://pay.mszlu.com/api/order/notify